name: Production build and deployment

on:
  push:
    branches:
      - "main"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment:
      name: Production
      url: https://heyada.pl
    env:
      DOCKER_REGISTRY: "docker.mateuszbasiaga.pl"
      DOCKER_IMAGE_NAME: "ada-web"
      DOCKER_CONTAINER_NAME: "ada-web"
      DEPLOYMENT_SERVER: "mateuszbasiaga.pl"
      DEPLOYMENT_PORT: 4300
    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        if: github.ref == 'refs/heads/main'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY}}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }}
          build-args: |
            NODE_ENV=production
            APP_VERSION=${{ steps.tag_version.outputs.new_tag }}
            SITE_URL=https://heyada.pl/
            API_BASE_URL=https://api.heyada.pl/

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOYMENT_SSH_KEY }}

      - name: Deploy to the server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOYMENT_USERNAME }}@$DEPLOYMENT_SERVER "
            docker pull $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }} && docker stop $DOCKER_CONTAINER_NAME || true && docker rm $DOCKER_CONTAINER_NAME || true && docker run -d --restart unless-stopped --name $DOCKER_CONTAINER_NAME -p $DEPLOYMENT_PORT:3000 $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }}
            sleep 2
            curl -f --silent --show-error localhost:$DEPLOYMENT_PORT 1>/dev/null && echo success
          "
