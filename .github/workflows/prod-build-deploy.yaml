name: Production build and deployment

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment:
      name: Production
      url: https://heyada.pl
    env:
      DOCKER_REGISTRY: "docker.mateuszbasiaga.pl"
      DOCKER_IMAGE_NAME: "ada-web"
      DOCKER_CONTAINER_NAME: "ada-web"
      DEPLOYMENT_SERVER: "mateuszbasiaga.pl"
      DEPLOYMENT_PORT: 4300
    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        if: github.ref == 'refs/heads/main'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker registry
        run: |
          echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login $DOCKER_REGISTRY -u ${{ secrets.DOCKER_REGISTRY_USER }} --password-stdin

      - name: Build Docker image
        env:
          APP_ENV: "production"
          APP_VERSION: ${{ steps.tag_version.outputs.new_tag }}
          SITE_URL: "https://heyada.pl/"
          API_BASE_URL: "https://api.heyada.pl/"
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }} .

      - name: Push Docker image to registry
        run: |
          docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }}

      - name: Deploy to server
        run: |
          docker pull $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }} && docker stop $DOCKER_CONTAINER_NAME || true && docker rm $DOCKER_CONTAINER_NAME || true && docker run -d --name $DOCKER_CONTAINER_NAME -p $DEPLOYMENT_PORT:3000 $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:${{ steps.tag_version.outputs.new_tag }}
          sleep 2
          curl -f --silent --show-error localhost:$DEPLOYMENT_PORT 1>/dev/null && echo success
